version '1.0-SNAPSHOT'

apply plugin: 'java'


repositories {
    mavenCentral()
}

if (JavaVersion.current().isJava8Compatible()) {
    throw new GradleException("This example requires Java 7, but you are using Java 8. Please see the Java 8 example in ../GradleJava8Example")
}

assert JavaVersion.current().isJava7()

configurations {
    checkerFrameworkJavac {
       description = 'a customization of the Open JDK javac compiler with additional support for type annotations'
    }
    checkerFrameworkAnnotatedJDK {
       description = 'a copy of JDK classes with Checker Framework type qualifers inserted'
    }
    checkerFramework {
       description = 'The Checker Framework: custom pluggable types for Java'
    } 
}

dependencies {
    ext.checkerFrameworkVersion = '1.9.11'
    checkerFrameworkJavac "org.checkerframework:compiler:${checkerFrameworkVersion}"
    checkerFrameworkAnnotatedJDK "org.checkerframework:jdk7:${checkerFrameworkVersion}"
    checkerFramework "org.checkerframework:checker:${checkerFrameworkVersion}"
    compile "org.checkerframework:checker-qual:${checkerFrameworkVersion}"

    compile 'org.apache.commons:commons-lang3:3.1'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

allprojects {
    tasks.withType(JavaCompile).all { JavaCompile compile ->

        compile.options.debug = true
        compile.options.compilerArgs = [
                '-processor', 'org.checkerframework.checker.nullness.NullnessChecker',
                '-processorpath', "${configurations.checkerFramework.asPath}",
                // uncomment to turn Checker Framework errors into warnings
                //'-Awarns',
                '-source', '7',
                '-target', '7',
                "-Xbootclasspath/p:${configurations.checkerFrameworkAnnotatedJDK.asPath}"
        ]
        options.fork = true
        options.forkOptions.jvmArgs += ["-Xbootclasspath/p:${configurations.checkerFrameworkJavac.asPath}"]

    }
}



